{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n  const handleTextChange = event => {\n    setText(event.target.innerText);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editableDivRef,\n        spellCheck: false,\n        contentEditable: true,\n        className: \"editable-div\",\n        onInput: handleTextChange,\n        placeholder: \"Enter your text here\",\n        style: {\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pmEifhfADfHTyqTs8MoOKZzwHr0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","editableDivRef","handleTextChange","event","target","innerText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","spellCheck","contentEditable","onInput","placeholder","style","width","height","border","padding","fontSize","overflow","type","length","map","match","index","message","replacements","r","value","join","substring","offset","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState, useRef } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n\n  const handleTextChange = (event) => {\n    setText(event.target.innerText);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n        ref={editableDivRef}\n        spellCheck={false}\n        contentEditable\n        className=\"editable-div\"\n        onInput={handleTextChange}\n        placeholder=\"Enter your text here\"\n        style={{\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        }}\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n  {corrections.map((match, index) => (\n    <li key={index}>\n      <strong>Issue:</strong> {match.message} <br />\n      <strong>Suggestion:</strong> {match.replacements.map(r => r.value).join(\", \")}\n      <br /><strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n    </li>\n  ))}\n</ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}