{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null); // To directly manipulate the contentEditable div\n\n  const handleTextChange = event => {\n    setText(event.target.innerText);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n  useEffect(() => {\n    if (corrections && corrections.length > 0) {\n      underlineWordsAtOffsets();\n    }\n  }, [corrections]);\n  const underlineWordsAtOffsets = () => {\n    let updatedText = text;\n    let offsetCorrection = 0;\n    corrections.forEach(match => {\n      const {\n        offset,\n        length\n      } = match;\n      const wordToUnderline = text.substring(offset, offset + length);\n\n      // Wrap the word in <u> tag\n      const underlinedWord = `<u>${wordToUnderline}</u>`;\n\n      // Update the text by inserting the <u> tag, considering previously added HTML\n      updatedText = updatedText.slice(0, offset + offsetCorrection) + underlinedWord + updatedText.slice(offset + length + offsetCorrection);\n\n      // Adjust the offset correction based on the added <u> tags\n      offsetCorrection += \"<u></u>\".length;\n    });\n\n    // Set the innerHTML of the editable div\n    if (editableDivRef.current) {\n      editableDivRef.current.innerHTML = updatedText;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        spellCheck: false,\n        contentEditable: true,\n        className: \"editable-div\",\n        onInput: handleTextChange,\n        ref: editableDivRef // Use ref to directly manipulate this div\n        ,\n        placeholder: \"Enter your text here\",\n        style: {\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), \" \", match.offset, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), \" \", match.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/WdApM5J1y0YT2OukCAUANvnU8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","editableDivRef","handleTextChange","event","target","innerText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","length","underlineWordsAtOffsets","updatedText","offsetCorrection","forEach","match","offset","wordToUnderline","substring","underlinedWord","slice","current","innerHTML","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","spellCheck","contentEditable","onInput","ref","placeholder","style","width","height","border","padding","fontSize","overflow","type","map","index","message","replacements","r","value","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null); // To directly manipulate the contentEditable div\n\n  const handleTextChange = (event) => {\n    setText(event.target.innerText);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  useEffect(() => {\n    if (corrections && corrections.length > 0) {\n      underlineWordsAtOffsets();\n    }\n  }, [corrections]);\n\n  const underlineWordsAtOffsets = () => {\n    let updatedText = text;\n    let offsetCorrection = 0;\n\n    corrections.forEach((match) => {\n      const { offset, length } = match;\n      const wordToUnderline = text.substring(offset, offset + length);\n      \n      // Wrap the word in <u> tag\n      const underlinedWord = `<u>${wordToUnderline}</u>`;\n      \n      // Update the text by inserting the <u> tag, considering previously added HTML\n      updatedText =\n        updatedText.slice(0, offset + offsetCorrection) +\n        underlinedWord +\n        updatedText.slice(offset + length + offsetCorrection);\n      \n      // Adjust the offset correction based on the added <u> tags\n      offsetCorrection += \"<u></u>\".length;\n    });\n\n    // Set the innerHTML of the editable div\n    if (editableDivRef.current) {\n      editableDivRef.current.innerHTML = updatedText;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n          spellCheck={false}\n          contentEditable\n          className=\"editable-div\"\n          onInput={handleTextChange}\n          ref={editableDivRef} // Use ref to directly manipulate this div\n          placeholder=\"Enter your text here\"\n          style={{\n            width: \"400px\",\n            height: \"150px\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            fontSize: \"16px\",\n            overflow: \"auto\"\n          }}\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong> {match.replacements.map(r => r.value).join(\", \")}\n              <br /><strong>Offset:</strong> {match.offset}\n              <br /><strong>Length:</strong> {match.length}\n              <br /><strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}