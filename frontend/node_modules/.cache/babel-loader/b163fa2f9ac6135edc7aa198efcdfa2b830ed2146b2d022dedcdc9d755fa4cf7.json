{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n\n  // Utility function to remove all <u> tags when editing starts\n  const stripTags = html => {\n    // Replace all <u> tags with just the inner text\n    return html.replace(/<\\/?u>/g, \"\");\n  };\n  const handleTextChange = event => {\n    const rawText = event.target.innerHTML;\n    const strippedText = stripTags(rawText); // Remove <u> tags if any\n    setText(strippedText);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    const correctedText = applyCorrections(text, result.matches || []);\n    setText(correctedText); // Update text with underlines\n    setCorrections(result.matches || []);\n  };\n  const applyCorrections = (text, matches) => {\n    let newText = text;\n\n    // Sort corrections by offset to apply them in reverse order to avoid index shifting\n    matches.sort((a, b) => b.offset - a.offset);\n    matches.forEach(match => {\n      const start = match.offset;\n      const end = start + match.length;\n      const wordToUnderline = newText.substring(start, end);\n\n      // Wrap the word with <u> tag to underline it\n      newText = newText.slice(0, start) + `<u>${wordToUnderline}</u>` + newText.slice(end);\n    });\n    return newText;\n  };\n\n  // Effect to ensure the latest `text` value is reflected with HTML updates in the div\n  useEffect(() => {\n    editableDivRef.current.innerHTML = text; // Update the contentEditable div manually\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editableDivRef,\n        spellCheck: false,\n        contentEditable: true,\n        className: \"editable-div\",\n        onInput: handleTextChange,\n        placeholder: \"Enter your text here\",\n        style: {\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), \" \", match.offset, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), \" \", match.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/WdApM5J1y0YT2OukCAUANvnU8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","editableDivRef","stripTags","html","replace","handleTextChange","event","rawText","target","innerHTML","strippedText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","correctedText","applyCorrections","matches","newText","sort","a","b","offset","forEach","match","start","end","length","wordToUnderline","substring","slice","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","spellCheck","contentEditable","onInput","placeholder","style","width","height","border","padding","fontSize","overflow","type","map","index","message","replacements","r","value","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n\n  // Utility function to remove all <u> tags when editing starts\n  const stripTags = (html) => {\n    // Replace all <u> tags with just the inner text\n    return html.replace(/<\\/?u>/g, \"\");\n  };\n\n  const handleTextChange = (event) => {\n    const rawText = event.target.innerHTML;\n    const strippedText = stripTags(rawText); // Remove <u> tags if any\n    setText(strippedText);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    const correctedText = applyCorrections(text, result.matches || []);\n    setText(correctedText);  // Update text with underlines\n    setCorrections(result.matches || []);\n  };\n\n  const applyCorrections = (text, matches) => {\n    let newText = text;\n    \n    // Sort corrections by offset to apply them in reverse order to avoid index shifting\n    matches.sort((a, b) => b.offset - a.offset);\n\n    matches.forEach((match) => {\n      const start = match.offset;\n      const end = start + match.length;\n      const wordToUnderline = newText.substring(start, end);\n      \n      // Wrap the word with <u> tag to underline it\n      newText = newText.slice(0, start) + `<u>${wordToUnderline}</u>` + newText.slice(end);\n    });\n\n    return newText;\n  };\n\n  // Effect to ensure the latest `text` value is reflected with HTML updates in the div\n  useEffect(() => {\n    editableDivRef.current.innerHTML = text; // Update the contentEditable div manually\n  }, [text]);\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n          ref={editableDivRef}\n          spellCheck={false}\n          contentEditable\n          className=\"editable-div\"\n          onInput={handleTextChange}\n          placeholder=\"Enter your text here\"\n          style={{\n            width: \"400px\",\n            height: \"150px\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            fontSize: \"16px\",\n            overflow: \"auto\"\n          }}\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong> {match.replacements.map(r => r.value).join(\", \")}\n              <br /><strong>Offset:</strong> {match.offset}\n              <br /><strong>Length:</strong> {match.length}\n              <br /><strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}