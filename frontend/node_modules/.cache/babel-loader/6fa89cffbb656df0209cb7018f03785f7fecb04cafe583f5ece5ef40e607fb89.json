{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const editableDivRef = useRef(null);\n  const handleTextChange = event => {\n    setText(event.target.innerText);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  // Function to highlight matches in the contenteditable div\n  const getHighlightedText = () => {\n    let highlightedText = text;\n    corrections.forEach(match => {\n      const wordToUnderline = text.substring(match.offset, match.offset + match.length);\n      const regex = new RegExp(`\\\\b${wordToUnderline}\\\\b`, 'g');\n      highlightedText = highlightedText.replace(regex, `<span class=\"underline\">${wordToUnderline}</span>`);\n    });\n    return highlightedText;\n  };\n\n  // Update the div's HTML when corrections change\n  useEffect(() => {\n    if (editableDivRef.current) {\n      editableDivRef.current.innerHTML = getHighlightedText();\n    }\n  }, [corrections, text]);\n\n  // Function to handle user input and remove underline if they type in the underlined word\n  const handleUserTyping = event => {\n    const selection = window.getSelection();\n    const range = selection.getRangeAt(0);\n    const node = range.startContainer;\n    if (node.parentNode && node.parentNode.classList.contains(\"underline\")) {\n      const newNode = document.createTextNode(node.textContent);\n      node.parentNode.replaceWith(newNode);\n    }\n    setText(event.target.innerText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editableDivRef,\n        spellCheck: false,\n        contentEditable: true,\n        className: \"editable-div\",\n        onInput: handleUserTyping,\n        placeholder: \"Enter your text here\",\n        style: {\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: getHighlightedText()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rosu/t3m5f79hG1WpKGOXMYQ3sU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","editableDivRef","handleTextChange","event","target","innerText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","getHighlightedText","highlightedText","forEach","match","wordToUnderline","substring","offset","length","regex","RegExp","replace","current","innerHTML","handleUserTyping","selection","window","getSelection","range","getRangeAt","node","startContainer","parentNode","classList","contains","newNode","document","createTextNode","textContent","replaceWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","spellCheck","contentEditable","onInput","placeholder","style","width","height","border","padding","fontSize","overflow","dangerouslySetInnerHTML","__html","type","map","index","message","replacements","r","value","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const editableDivRef = useRef(null);\n\n  const handleTextChange = (event) => {\n    setText(event.target.innerText);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  // Function to highlight matches in the contenteditable div\n  const getHighlightedText = () => {\n    let highlightedText = text;\n\n    corrections.forEach((match) => {\n      const wordToUnderline = text.substring(match.offset, match.offset + match.length);\n      const regex = new RegExp(`\\\\b${wordToUnderline}\\\\b`, 'g');\n      highlightedText = highlightedText.replace(\n        regex,\n        `<span class=\"underline\">${wordToUnderline}</span>`\n      );\n    });\n\n    return highlightedText;\n  };\n\n  // Update the div's HTML when corrections change\n  useEffect(() => {\n    if (editableDivRef.current) {\n      editableDivRef.current.innerHTML = getHighlightedText();\n    }\n  }, [corrections, text]);\n\n  // Function to handle user input and remove underline if they type in the underlined word\n  const handleUserTyping = (event) => {\n    const selection = window.getSelection();\n    const range = selection.getRangeAt(0);\n    const node = range.startContainer;\n\n    if (node.parentNode && node.parentNode.classList.contains(\"underline\")) {\n      const newNode = document.createTextNode(node.textContent);\n      node.parentNode.replaceWith(newNode);\n    }\n    setText(event.target.innerText);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n          ref={editableDivRef}\n          spellCheck={false}\n          contentEditable\n          className=\"editable-div\"\n          onInput={handleUserTyping}\n          placeholder=\"Enter your text here\"\n          style={{\n            width: \"400px\",\n            height: \"150px\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            fontSize: \"16px\",\n            overflow: \"auto\",\n          }}\n          dangerouslySetInnerHTML={{ __html: getHighlightedText() }}\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong> {match.replacements.map((r) => r.value).join(\", \")}\n              <br />\n              <strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}