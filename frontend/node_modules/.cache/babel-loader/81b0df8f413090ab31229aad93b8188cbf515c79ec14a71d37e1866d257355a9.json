{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n  const underlineCorrections = (corrections, text) => {\n    let newText = text;\n    corrections.forEach(match => {\n      const word = newText.substring(match.offset, match.offset + match.length);\n      const replacement = `<span class=\"underlined\" data-offset=\"${match.offset}\">${word}</span>`;\n      newText = newText.slice(0, match.offset) + replacement + newText.slice(match.offset + match.length);\n    });\n    return newText;\n  };\n  const handleTextChange = event => {\n    const updatedText = event.target.innerText;\n    setText(updatedText);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n  useEffect(() => {\n    if (corrections && corrections.length > 0) {\n      const div = editableDivRef.current;\n      div.innerHTML = underlineCorrections(corrections, text);\n      const observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (mutation.type === \"childList\" && mutation.target.classList.contains(\"underlined\")) {\n            const currentOffset = parseInt(mutation.target.getAttribute(\"data-offset\"), 10);\n            const currentWord = mutation.target.innerText;\n\n            // Check if the word has been modified\n            const originalWord = text.substring(currentOffset, currentOffset + currentWord.length);\n            if (currentWord !== originalWord) {\n              mutation.target.classList.remove(\"underlined\");\n            }\n          }\n        });\n      });\n      observer.observe(editableDivRef.current, {\n        subtree: true,\n        childList: true,\n        characterData: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [corrections, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editableDivRef,\n        spellCheck: false,\n        contentEditable: true,\n        className: \"editable-div\",\n        onInput: handleTextChange,\n        placeholder: \"Enter your text here\",\n        style: {\n          width: \"400px\",\n          height: \"150px\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          overflow: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), \" \", match.offset, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), \" \", match.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/WdApM5J1y0YT2OukCAUANvnU8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","editableDivRef","underlineCorrections","newText","forEach","match","word","substring","offset","length","replacement","slice","handleTextChange","event","updatedText","target","innerText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","div","current","innerHTML","observer","MutationObserver","mutations","mutation","type","classList","contains","currentOffset","parseInt","getAttribute","currentWord","originalWord","remove","observe","subtree","childList","characterData","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","spellCheck","contentEditable","onInput","placeholder","style","width","height","border","padding","fontSize","overflow","map","index","message","replacements","r","value","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState(null);\n  const editableDivRef = useRef(null);\n  \n  const underlineCorrections = (corrections, text) => {\n    let newText = text;\n    corrections.forEach((match) => {\n      const word = newText.substring(match.offset, match.offset + match.length);\n      const replacement = `<span class=\"underlined\" data-offset=\"${match.offset}\">${word}</span>`;\n      newText = newText.slice(0, match.offset) + replacement + newText.slice(match.offset + match.length);\n    });\n    return newText;\n  };\n\n  const handleTextChange = (event) => {\n    const updatedText = event.target.innerText;\n    setText(updatedText);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  useEffect(() => {\n    if (corrections && corrections.length > 0) {\n      const div = editableDivRef.current;\n      div.innerHTML = underlineCorrections(corrections, text);\n\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.type === \"childList\" && mutation.target.classList.contains(\"underlined\")) {\n            const currentOffset = parseInt(mutation.target.getAttribute(\"data-offset\"), 10);\n            const currentWord = mutation.target.innerText;\n            \n            // Check if the word has been modified\n            const originalWord = text.substring(currentOffset, currentOffset + currentWord.length);\n            if (currentWord !== originalWord) {\n              mutation.target.classList.remove(\"underlined\");\n            }\n          }\n        });\n      });\n\n      observer.observe(editableDivRef.current, {\n        subtree: true,\n        childList: true,\n        characterData: true,\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [corrections, text]);\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n          ref={editableDivRef}\n          spellCheck={false}\n          contentEditable\n          className=\"editable-div\"\n          onInput={handleTextChange}\n          placeholder=\"Enter your text here\"\n          style={{\n            width: \"400px\",\n            height: \"150px\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            fontSize: \"16px\",\n            overflow: \"auto\"\n          }}\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong> {match.replacements.map(r => r.value).join(\", \")}\n              <br /><strong>Offset:</strong> {match.offset}\n              <br /><strong>Length:</strong> {match.length}\n              <br /><strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}