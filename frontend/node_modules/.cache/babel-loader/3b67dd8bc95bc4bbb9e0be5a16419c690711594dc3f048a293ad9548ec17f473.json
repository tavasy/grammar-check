{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const contentEditableRef = useRef(null);\n  const handleContentEditableChange = () => {\n    const rawText = contentEditableRef.current.innerText;\n    setText(rawText);\n\n    // Reset corrections when the user types new text\n    setCorrections([]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n  const renderHighlightedText = () => {\n    let highlightedText = \"\";\n    let lastIndex = 0;\n    if (corrections.length === 0) {\n      return text;\n    }\n    corrections.forEach((match, index) => {\n      const start = match.offset;\n      const end = start + match.length;\n\n      // Add the text before the issue\n      highlightedText += text.slice(lastIndex, start);\n\n      // Add the underlined part\n      highlightedText += `<span style=\"text-decoration: underline; color: red;\">${text.slice(start, end)}</span>`;\n      lastIndex = end;\n    });\n\n    // Add remaining text after the last issue\n    if (lastIndex < text.length) {\n      highlightedText += text.slice(lastIndex);\n    }\n    return highlightedText;\n  };\n\n  // Update the contentEditable div with the highlighted text\n  useEffect(() => {\n    if (contentEditableRef.current) {\n      contentEditableRef.current.innerHTML = renderHighlightedText();\n    }\n  }, [corrections, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: contentEditableRef,\n        contentEditable: true,\n        style: {\n          width: \"500px\",\n          height: \"200px\",\n          border: \"1px solid black\",\n          padding: \"10px\",\n          whiteSpace: \"pre-wrap\",\n          overflowWrap: \"break-word\"\n        },\n        onInput: handleContentEditableChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        style: {\n          display: \"none\"\n        } // Hidden but still used to store the real text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), \" \", match.offset]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lgQzffIZ2mCfBU1LpzgvX80XzN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","contentEditableRef","handleContentEditableChange","rawText","current","innerText","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","renderHighlightedText","highlightedText","lastIndex","length","forEach","match","index","start","offset","end","slice","innerHTML","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","contentEditable","style","width","height","border","padding","whiteSpace","overflowWrap","onInput","value","display","type","map","message","replacements","r","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const contentEditableRef = useRef(null);\n\n  const handleContentEditableChange = () => {\n    const rawText = contentEditableRef.current.innerText;\n    setText(rawText);\n\n    // Reset corrections when the user types new text\n    setCorrections([]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  const renderHighlightedText = () => {\n    let highlightedText = \"\";\n    let lastIndex = 0;\n\n    if (corrections.length === 0) {\n      return text;\n    }\n\n    corrections.forEach((match, index) => {\n      const start = match.offset;\n      const end = start + match.length;\n\n      // Add the text before the issue\n      highlightedText += text.slice(lastIndex, start);\n\n      // Add the underlined part\n      highlightedText += `<span style=\"text-decoration: underline; color: red;\">${text.slice(\n        start,\n        end\n      )}</span>`;\n\n      lastIndex = end;\n    });\n\n    // Add remaining text after the last issue\n    if (lastIndex < text.length) {\n      highlightedText += text.slice(lastIndex);\n    }\n\n    return highlightedText;\n  };\n\n  // Update the contentEditable div with the highlighted text\n  useEffect(() => {\n    if (contentEditableRef.current) {\n      contentEditableRef.current.innerHTML = renderHighlightedText();\n    }\n  }, [corrections, text]);\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <div\n          ref={contentEditableRef}\n          contentEditable\n          style={{\n            width: \"500px\",\n            height: \"200px\",\n            border: \"1px solid black\",\n            padding: \"10px\",\n            whiteSpace: \"pre-wrap\",\n            overflowWrap: \"break-word\",\n          }}\n          onInput={handleContentEditableChange}\n        ></div>\n\n        <textarea\n          value={text}\n          style={{ display: \"none\" }} // Hidden but still used to store the real text\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong>{\" \"}\n              {match.replacements.map((r) => r.value).join(\", \")}\n              <br />\n              <strong>Offset:</strong> {match.offset}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}