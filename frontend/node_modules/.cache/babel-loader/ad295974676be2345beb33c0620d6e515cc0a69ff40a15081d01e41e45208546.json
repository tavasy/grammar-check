{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\"); // Stores the plain text input\n  const [corrections, setCorrections] = useState([]); // Stores corrections from the API\n  const textRef = useRef(null); // To handle the editable div\n\n  const handleTextChange = e => {\n    setText(e.target.innerText); // Update state with content from the editable div\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  // Function to insert underlined issues directly into the contenteditable div\n  const getHighlightedText = () => {\n    if (corrections.length === 0) {\n      return text; // Return plain text if there are no corrections\n    }\n    let newText = [];\n    let lastIndex = 0;\n    corrections.forEach((match, index) => {\n      const {\n        offset,\n        length\n      } = match;\n\n      // Add plain text before the correction\n      if (lastIndex < offset) {\n        newText.push(text.slice(lastIndex, offset));\n      }\n\n      // Highlight the text that has a grammatical issue\n      newText.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: \"underline\",\n          color: \"red\"\n        },\n        children: text.slice(offset, offset + length)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n\n      // Move the index after the correction\n      lastIndex = offset + length;\n    });\n\n    // Add any remaining text after the last correction\n    if (lastIndex < text.length) {\n      newText.push(text.slice(lastIndex));\n    }\n    return newText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: textRef,\n        contentEditable: \"true\",\n        onInput: handleTextChange,\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          minHeight: \"200px\",\n          width: \"400px\",\n          whiteSpace: \"pre-wrap\",\n          // Maintain line breaks\n          outline: \"none\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: corrections.length ? getHighlightedText() : text\n        } // Set the HTML with the highlighted errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \")]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oPZQwR1LPIQO3YZ3pBJDb53DjFY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","text","setText","corrections","setCorrections","textRef","handleTextChange","e","target","innerText","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","getHighlightedText","length","newText","lastIndex","forEach","match","index","offset","push","slice","style","textDecoration","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","ref","contentEditable","onInput","border","padding","minHeight","width","whiteSpace","outline","dangerouslySetInnerHTML","__html","type","map","message","replacements","r","value","join","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\"); // Stores the plain text input\n  const [corrections, setCorrections] = useState([]); // Stores corrections from the API\n  const textRef = useRef(null); // To handle the editable div\n\n  const handleTextChange = (e) => {\n    setText(e.target.innerText); // Update state with content from the editable div\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n  };\n\n  // Function to insert underlined issues directly into the contenteditable div\n  const getHighlightedText = () => {\n    if (corrections.length === 0) {\n      return text; // Return plain text if there are no corrections\n    }\n\n    let newText = [];\n    let lastIndex = 0;\n\n    corrections.forEach((match, index) => {\n      const { offset, length } = match;\n\n      // Add plain text before the correction\n      if (lastIndex < offset) {\n        newText.push(text.slice(lastIndex, offset));\n      }\n\n      // Highlight the text that has a grammatical issue\n      newText.push(\n        <span key={index} style={{ textDecoration: \"underline\", color: \"red\" }}>\n          {text.slice(offset, offset + length)}\n        </span>\n      );\n\n      // Move the index after the correction\n      lastIndex = offset + length;\n    });\n\n    // Add any remaining text after the last correction\n    if (lastIndex < text.length) {\n      newText.push(text.slice(lastIndex));\n    }\n\n    return newText;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        {/* A contenteditable div behaves like a textarea but allows inline styling */}\n        <div\n          ref={textRef}\n          contentEditable=\"true\"\n          onInput={handleTextChange}\n          style={{\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            minHeight: \"200px\",\n            width: \"400px\",\n            whiteSpace: \"pre-wrap\", // Maintain line breaks\n            outline: \"none\",\n          }}\n          dangerouslySetInnerHTML={{\n            __html: corrections.length ? getHighlightedText() : text,\n          }} // Set the HTML with the highlighted errors\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      <h2>Corrections</h2>\n      {corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong> {match.replacements\n                .map((r) => r.value)\n                .join(\", \")}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}