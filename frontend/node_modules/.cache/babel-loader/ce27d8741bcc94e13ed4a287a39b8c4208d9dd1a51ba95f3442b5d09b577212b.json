{"ast":null,"code":"var _jsxFileName = \"/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const [highlightedText, setHighlightedText] = useState(null); // Separate state for highlighted text\n\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setCorrections(result.matches || []);\n    setHighlightedText(renderHighlightedText(text, result.matches || [])); // Save the highlighted text separately\n  };\n  const renderHighlightedText = (text, corrections) => {\n    if (corrections.length === 0) return text;\n    let processedText = [];\n    let lastIndex = 0;\n    corrections.forEach((match, index) => {\n      const start = match.offset;\n      const end = start + match.length;\n\n      // Push the unhighlighted part of the text\n      if (start > lastIndex) {\n        processedText.push(text.slice(lastIndex, start));\n      }\n\n      // Push the highlighted part of the text (the part that has an issue)\n      processedText.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: \"underline\",\n          color: \"red\"\n        },\n        children: text.slice(start, end)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n      lastIndex = end;\n    });\n\n    // Push any remaining text after the last correction\n    if (lastIndex < text.length) {\n      processedText.push(text.slice(lastIndex));\n    }\n    return processedText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grammar Correction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: handleTextChange,\n        placeholder: \"Enter your text here\",\n        rows: \"10\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), highlightedText && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text with Issues Highlighted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: highlightedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Corrections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), corrections && corrections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: corrections.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), \" \", match.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), \" \", match.replacements.map(r => r.value).join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word at Offset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), \" \", text.substring(match.offset, match.offset + match.length)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No corrections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MiPJEsEGi/eYkNYdZ9OME/GT02w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","text","setText","corrections","setCorrections","highlightedText","setHighlightedText","handleTextChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","matches","renderHighlightedText","length","processedText","lastIndex","forEach","match","index","start","offset","end","push","slice","style","textDecoration","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onChange","placeholder","rows","cols","type","map","message","replacements","r","join","substring","_c","$RefreshReg$"],"sources":["/Users/tatiana/Documents/code/grammar-correction-tool/frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [corrections, setCorrections] = useState([]);\n  const [highlightedText, setHighlightedText] = useState(null); // Separate state for highlighted text\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://127.0.0.1:5000/grammar-check\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    const result = await response.json();\n    setCorrections(result.matches || []);\n    setHighlightedText(renderHighlightedText(text, result.matches || [])); // Save the highlighted text separately\n  };\n\n  const renderHighlightedText = (text, corrections) => {\n    if (corrections.length === 0) return text;\n\n    let processedText = [];\n    let lastIndex = 0;\n\n    corrections.forEach((match, index) => {\n      const start = match.offset;\n      const end = start + match.length;\n\n      // Push the unhighlighted part of the text\n      if (start > lastIndex) {\n        processedText.push(text.slice(lastIndex, start));\n      }\n\n      // Push the highlighted part of the text (the part that has an issue)\n      processedText.push(\n        <span key={index} style={{ textDecoration: \"underline\", color: \"red\" }}>\n          {text.slice(start, end)}\n        </span>\n      );\n\n      lastIndex = end;\n    });\n\n    // Push any remaining text after the last correction\n    if (lastIndex < text.length) {\n      processedText.push(text.slice(lastIndex));\n    }\n\n    return processedText;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Grammar Correction Tool</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={text}\n          onChange={handleTextChange}\n          placeholder=\"Enter your text here\"\n          rows=\"10\"\n          cols=\"50\"\n        />\n        <br />\n        <button type=\"submit\">Check Grammar</button>\n      </form>\n\n      {highlightedText && (\n        <>\n          <h2>Text with Issues Highlighted</h2>\n          <div>{highlightedText}</div>\n        </>\n      )}\n\n      <h2>Corrections</h2>\n      {corrections && corrections.length > 0 ? (\n        <ul>\n          {corrections.map((match, index) => (\n            <li key={index}>\n              <strong>Issue:</strong> {match.message} <br />\n              <strong>Suggestion:</strong>{\" \"}\n              {match.replacements.map((r) => r.value).join(\", \")}\n              <br />\n              <strong>Word at Offset:</strong> {text.substring(match.offset, match.offset + match.length)}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No corrections found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}